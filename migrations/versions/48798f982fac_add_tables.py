"""add tables

Revision ID: 48798f982fac
Revises:
Create Date: 2022-12-31 16:02:54.437473

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '48798f982fac'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('uuid', sa.CHAR(length=36), nullable=False),
                    sa.Column('email', sa.String(length=70), nullable=False),
                    sa.Column('password', sa.String(length=150), nullable=False),
                    sa.Column('first_name', sa.String(length=50), nullable=False),
                    sa.Column('last_name', sa.String(length=50), nullable=False),
                    sa.Column('date_of_birth', sa.Date(), nullable=False),
                    sa.Column('image_name', sa.String(length=100), nullable=True),
                    sa.Column('status', sa.Boolean(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('uuid')
                    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_date_of_birth'), ['date_of_birth'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_uuid'), ['uuid'], unique=True)
        batch_op.create_index('ix_users_uuid_email', ['uuid', 'email'], unique=True)

    op.create_table('information',
                    sa.Column('uuid', sa.CHAR(length=36), nullable=False),
                    sa.Column('user_uuid', sa.CHAR(length=36), nullable=False),
                    sa.Column('country', sa.String(length=50), nullable=True),
                    sa.Column('post_code', sa.String(length=50), nullable=False),
                    sa.Column('state', sa.String(length=50), nullable=True),
                    sa.Column('city', sa.String(length=50), nullable=False),
                    sa.Column('address', sa.String(length=50), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
                    sa.PrimaryKeyConstraint('uuid')
                    )
    with op.batch_alter_table('information', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_information_user_uuid'), ['user_uuid'], unique=True)
        batch_op.create_index(batch_op.f('ix_information_uuid'), ['uuid'], unique=True)

    op.create_table('tasks',
                    sa.Column('uuid', sa.CHAR(length=36), nullable=False),
                    sa.Column('user_uuid', sa.CHAR(length=36), nullable=False),
                    sa.Column('name', sa.String(length=150), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('type_task', sa.Enum('no_repeat', 'daily',
                              name='typetasks'), nullable=False),
                    sa.Column('start_data_time', sa.DateTime(), nullable=False),
                    sa.Column('end_data_time', sa.DateTime(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
                    sa.PrimaryKeyConstraint('uuid')
                    )
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tasks_end_data_time'), ['end_data_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_tasks_start_data_time'),
                              ['start_data_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_tasks_type_task'), ['type_task'], unique=False)
        batch_op.create_index(batch_op.f('ix_tasks_user_uuid'), ['user_uuid'], unique=False)
        batch_op.create_index(batch_op.f('ix_tasks_uuid'), ['uuid'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tasks_uuid'))
        batch_op.drop_index(batch_op.f('ix_tasks_user_uuid'))
        batch_op.drop_index(batch_op.f('ix_tasks_type_task'))
        batch_op.drop_index(batch_op.f('ix_tasks_start_data_time'))
        batch_op.drop_index(batch_op.f('ix_tasks_end_data_time'))

    op.drop_table('tasks')
    with op.batch_alter_table('information', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_information_uuid'))
        batch_op.drop_index(batch_op.f('ix_information_user_uuid'))

    op.drop_table('information')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('ix_users_uuid_email')
        batch_op.drop_index(batch_op.f('ix_users_uuid'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_date_of_birth'))

    op.drop_table('users')
    # ### end Alembic commands ###
